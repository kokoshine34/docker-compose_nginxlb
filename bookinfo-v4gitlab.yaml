#namespace: bookinfo
apiVersion: v1
kind: Namespace
metadata:
  name: productpage
  labels:
    name: productpage
---
apiVersion: v1
kind: Namespace
metadata:
  name: details
  labels:
    name: details
---
apiVersion: v1
kind: Namespace
metadata:
  name: reviews
  labels:
    name: reviews
---

apiVersion: v1
kind: Namespace
metadata:
  name: ratings
  labels:
    name: ratings
---

# Bookinfo application deployment
apiVersion: v1
kind: Service
metadata:
  name: details
  namespace: details
  labels:
    app: details
    service: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  namespace: details
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  namespace: details
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      imagePullSecrets:
      - name: gitlab-registry-secret
      serviceAccountName: bookinfo-details
      containers:
      - name: details
        env:
        - name: REVIEWS_HOSTNAME
          value: reviews.reviews
        - name: RATINGS_HOSTNAME
          value: ratings.ratings
        - name: PRODUCTPAGE_HOSTNAME
          value: productpage.productpgae
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/details:v1
        imagePullPolicy: IfNotPresent
        
        ports:
        - containerPort: 9080
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  namespace: ratings
  labels:
    app: ratings
    service: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  namespace: ratings
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  namespace: ratings
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: bookinfo-ratings
      imagePullSecrets:
      - name: gitlab-registry-secret
      containers:
      - name: ratings
        env:
        - name: DETAILS_HOSTNAME
          value: details.details
        - name: REVIEWS_HOSTNAME
          value: reviews.reviews
        - name: PRODUCTPAGE_HOSTNAME
          value: productpage.productpgae
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/ratings:v1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9080
---
##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  namespace: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  namespace: reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  namespace: reviews
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: bookinfo-reviews
      imagePullSecrets:
      - name: gitlab-registry-secret
      containers:
      - name: reviews
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/reviews:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: DETAILS_HOSTNAME
          value: details.details
        - name: RATINGS_HOSTNAME
          value: ratings.ratings
        - name: PRODUCTPAGE_HOSTNAME
          value: productpage.productpgae
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  namespace: reviews
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      imagePullSecrets:
      - name: gitlab-registry-secret
      containers:
      - name: reviews
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/reviews:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: DETAILS_HOSTNAME
          value: details.details
        - name: RATINGS_HOSTNAME
          value: ratings.ratings
        - name: PRODUCTPAGE_HOSTNAME
          value: productpage.productpgae
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  namespace: reviews
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      imagePullSecrets:
      - name: gitlab-registry-secret
      containers:
      - name: reviews
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/reviews:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: DETAILS_HOSTNAME
          value: details.details
        - name: RATINGS_HOSTNAME
          value: ratings.ratings
        - name: PRODUCTPAGE_HOSTNAME
          value: productpage.productpgae
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  namespace: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  namespace: productpage
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  namespace: productpage
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9080"
        prometheus.io/path: "/metrics"
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      imagePullSecrets:
      - name: gitlab-registry-secret
      containers:
      - name: productpage
        image: registry.gitlab.com/kokoshine/bookinfo-microservices/productpage:v1
        imagePullPolicy: IfNotPresent
        env:
        - name: DETAILS_HOSTNAME
          value: details.details
        - name: RATINGS_HOSTNAME
          value: ratings.ratings
        - name: REVIEWS_HOSTNAME
          value: reviews.reviews
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
